#!perl

# PODNAME: manager
# ABSTRACT: Starts an Argon manager service
#
=head1 SYNOPSIS

  manager --host localhost --port 4242

=head1 DESCRIPTION

Starts the Argon manager service. The service will not accept any tasks until
at least one worker has registered with it.

=head1 OPTIONS

=head2 port

Optionally specifies the port to listen on. Defaults to an OS-assigned port.

=head2 host

Optionally specifies the device address to listen on. Defaults to an
OS-assigned address.

=cut


use strict;
use warnings;
use AnyEvent;
use Argon::Log;
use Argon::Manager;
use Getopt::Long::Descriptive;

my ($opt, $usage) = describe_options(
  'manager %o',
  ['key|k=s',     '(required) path to file containing encryption key', {required => 1}],
  ['host|h=s',    '(optional) hostname on which to listen (defaults to localhost)'],
  ['port|p=i',    '(optional) port on which to listen (defaults to OS-assigned port)', {callbacks => {'port number' => sub { shift > 0 }}}],
  ['verbose|v=i', '(optional) level of verbosity (1 - 9; defaults to 5 [warn])'],
  [],
  ['help|h',  'prints this help text and exits', {shortcircuit => 1}],
  ['usage|u', 'prints this help text and exits', {shortcircuit => 1}],
);

if ($opt->help) {
  print $usage->text;
  exit;
}

log_level $opt->verbose || 5;

my $manager = Argon::Manager->new(
  host    => $opt->host,
  port    => $opt->port,
  keyfile => $opt->key,
);

AnyEvent->condvar->recv;
